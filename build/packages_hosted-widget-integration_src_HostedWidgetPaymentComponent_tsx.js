"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonpCheckout"] = self["webpackJsonpCheckout"] || []).push([["packages_hosted-widget-integration_src_HostedWidgetPaymentComponent_tsx"],{

/***/ "./packages/hosted-widget-integration/src/HostedWidgetPaymentComponent.tsx":
/*!*********************************************************************************!*\
  !*** ./packages/hosted-widget-integration/src/HostedWidgetPaymentComponent.tsx ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _bigcommerce_checkout_dom_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @bigcommerce/checkout/dom-utils */ \"./packages/dom-utils/src/preventDefault.ts\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isBankInstrument/isBankInstrument.ts\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/storedInstrument/AccountInstrumentFieldset/AccountInstrumentFieldset.tsx\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/storedInstrument/CardInstrumentFieldset/CardInstrumentFieldset.tsx\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/storedInstrument/StoreInstrumentFieldset/StoreInstrumentFieldset.tsx\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isCardInstrument/isCardInstrument.ts\");\n/* harmony import */ var _bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @bigcommerce/checkout/locale */ \"./packages/locale/src/TranslatedString.tsx\");\n/* harmony import */ var _bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bigcommerce/checkout/ui */ \"./packages/ui/src/loading/LoadingOverlay.tsx\");\n\n\n\n\n\n\n\n\nclass HostedWidgetPaymentComponent extends react__WEBPACK_IMPORTED_MODULE_2__.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isAddingNewCard: false,\n        };\n        this.handleDeleteInstrument = (id) => {\n            const { instruments, setFieldValue } = this.props;\n            const { selectedInstrumentId } = this.state;\n            if (instruments.length === 0) {\n                this.setState({\n                    isAddingNewCard: true,\n                    selectedInstrumentId: undefined,\n                });\n                setFieldValue('instrumentId', '');\n            }\n            else if (selectedInstrumentId === id) {\n                this.setState({\n                    selectedInstrumentId: this.getDefaultInstrumentId(),\n                });\n                setFieldValue('instrumentId', this.getDefaultInstrumentId());\n            }\n        };\n        this.handleUseNewCard = () => (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {\n            const { deinitializePayment, initializePayment = lodash__WEBPACK_IMPORTED_MODULE_1__.noop, method } = this.props;\n            this.setState({\n                isAddingNewCard: true,\n                selectedInstrumentId: undefined,\n            });\n            yield deinitializePayment({\n                gatewayId: method.gateway,\n                methodId: method.id,\n            });\n            // eslint-disable-next-line @typescript-eslint/await-thenable\n            yield initializePayment({\n                gatewayId: method.gateway,\n                methodId: method.id,\n            });\n        });\n        this.handleSelectInstrument = (id) => {\n            this.setState({\n                isAddingNewCard: false,\n                selectedInstrumentId: id,\n            });\n        };\n    }\n    componentDidMount() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {\n            const { isInstrumentFeatureAvailable: isInstrumentFeatureAvailableProp, loadInstruments, method, onUnhandledError = lodash__WEBPACK_IMPORTED_MODULE_1__.noop, setValidationSchema, } = this.props;\n            setValidationSchema(method, this.getValidationSchema());\n            try {\n                if (isInstrumentFeatureAvailableProp) {\n                    yield loadInstruments();\n                }\n                yield this.initializeMethod();\n            }\n            catch (error) {\n                onUnhandledError(error);\n            }\n        });\n    }\n    componentDidUpdate(prevProps, prevState) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {\n            const { deinitializePayment, instruments, method, onUnhandledError = lodash__WEBPACK_IMPORTED_MODULE_1__.noop, setValidationSchema, isPaymentDataRequired, } = this.props;\n            const { selectedInstrumentId } = this.state;\n            setValidationSchema(method, this.getValidationSchema());\n            if (selectedInstrumentId !== prevState.selectedInstrumentId ||\n                (prevProps.instruments.length > 0 && instruments.length === 0) ||\n                prevProps.isPaymentDataRequired !== isPaymentDataRequired) {\n                try {\n                    yield deinitializePayment({\n                        gatewayId: method.gateway,\n                        methodId: method.id,\n                    });\n                    yield this.initializeMethod();\n                }\n                catch (error) {\n                    onUnhandledError(error);\n                }\n            }\n        });\n    }\n    componentWillUnmount() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {\n            const { deinitializeCustomer = lodash__WEBPACK_IMPORTED_MODULE_1__.noop, deinitializePayment, method, onUnhandledError = lodash__WEBPACK_IMPORTED_MODULE_1__.noop, setSubmit, setValidationSchema, } = this.props;\n            setValidationSchema(method, null);\n            setSubmit(method, null);\n            try {\n                yield deinitializePayment({\n                    gatewayId: method.gateway,\n                    methodId: method.id,\n                });\n                // eslint-disable-next-line @typescript-eslint/await-thenable\n                yield deinitializeCustomer({\n                    methodId: method.id,\n                });\n            }\n            catch (error) {\n                onUnhandledError(error);\n            }\n        });\n    }\n    render() {\n        const { instruments, hideWidget = false, isInitializing = false, isAccountInstrument, isInstrumentFeatureAvailable: isInstrumentFeatureAvailableProp, isLoadingInstruments, shouldHideInstrumentExpiryDate = false, shouldShow = true, } = this.props;\n        const { isAddingNewCard, selectedInstrumentId = this.getDefaultInstrumentId() } = this.state;\n        if (!shouldShow) {\n            return null;\n        }\n        const selectedInstrument = instruments.find((instrument) => instrument.bigpayToken === selectedInstrumentId) ||\n            instruments[0];\n        const shouldShowInstrumentFieldset = isInstrumentFeatureAvailableProp && instruments.length > 0;\n        const shouldShowCreditCardFieldset = !shouldShowInstrumentFieldset || isAddingNewCard;\n        const isLoading = (isInitializing || isLoadingInstruments) && !hideWidget;\n        const selectedAccountInstrument = this.getSelectedBankAccountInstrument(isAddingNewCard, selectedInstrument);\n        const shouldShowAccountInstrument = instruments[0] && (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_4__.isBankAccountInstrument)(instruments[0]);\n        return (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { hideContentWhenLoading: true, isLoading: isLoading },\n            react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: \"paymentMethod--hosted\" },\n                shouldShowAccountInstrument && shouldShowInstrumentFieldset && (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n                // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n                , { \n                    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n                    instruments: instruments, onSelectInstrument: this.handleSelectInstrument, onUseNewInstrument: this.handleUseNewCard, selectedInstrument: selectedAccountInstrument })),\n                !shouldShowAccountInstrument && shouldShowInstrumentFieldset && (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n                // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n                , { \n                    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n                    instruments: instruments, onDeleteInstrument: this.handleDeleteInstrument, onSelectInstrument: this.handleSelectInstrument, onUseNewInstrument: this.handleUseNewCard, selectedInstrumentId: selectedInstrumentId, shouldHideExpiryDate: shouldHideInstrumentExpiryDate, validateInstrument: this.getValidateInstrument() })),\n                this.renderPaymentDescriptorIfAvailable(),\n                this.renderContainer(shouldShowCreditCardFieldset),\n                isInstrumentFeatureAvailableProp && (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { instrumentId: selectedInstrumentId, instruments: instruments, isAccountInstrument: isAccountInstrument || shouldShowAccountInstrument })),\n                this.renderEditButtonIfAvailable())));\n    }\n    getValidateInstrument() {\n        const { hideVerificationFields, instruments, method, isInstrumentCardNumberRequired: isInstrumentCardNumberRequiredProp, validateInstrument, } = this.props;\n        const { selectedInstrumentId = this.getDefaultInstrumentId() } = this.state;\n        const selectedInstrument = (0,lodash__WEBPACK_IMPORTED_MODULE_1__.find)(instruments, {\n            bigpayToken: selectedInstrumentId,\n        });\n        if (selectedInstrument) {\n            (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(selectedInstrument);\n            const shouldShowNumberField = isInstrumentCardNumberRequiredProp(selectedInstrument, method);\n            if (hideVerificationFields) {\n                return;\n            }\n            if (validateInstrument) {\n                return validateInstrument(shouldShowNumberField, selectedInstrument);\n            }\n        }\n    }\n    renderContainer(shouldShowCreditCardFieldset) {\n        const { containerId, hideContentWhenSignedOut = false, hideWidget, isSignInRequired = false, isSignedIn, method, additionalContainerClassName, shouldRenderCustomInstrument = false, renderCustomPaymentForm, } = this.props;\n        return (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('widget', `widget--${method.id}`, 'payment-widget', shouldRenderCustomInstrument ? '' : additionalContainerClassName), id: containerId, style: {\n                display: (hideContentWhenSignedOut && isSignInRequired && !isSignedIn) ||\n                    !shouldShowCreditCardFieldset ||\n                    hideWidget\n                    ? 'none'\n                    : undefined,\n            }, tabIndex: -1 }, shouldRenderCustomInstrument &&\n            renderCustomPaymentForm &&\n            renderCustomPaymentForm()));\n    }\n    getValidationSchema() {\n        const { isInstrumentFeatureAvailable: isInstrumentFeatureAvailableProp, isPaymentDataRequired, storedCardValidationSchema, } = this.props;\n        if (!isPaymentDataRequired) {\n            return null;\n        }\n        const selectedInstrument = this.getSelectedInstrument();\n        if (isInstrumentFeatureAvailableProp && selectedInstrument) {\n            return storedCardValidationSchema || null;\n        }\n        return null;\n    }\n    getSelectedInstrument() {\n        const { instruments } = this.props;\n        const { selectedInstrumentId = this.getDefaultInstrumentId() } = this.state;\n        return (0,lodash__WEBPACK_IMPORTED_MODULE_1__.find)(instruments, { bigpayToken: selectedInstrumentId });\n    }\n    getSelectedBankAccountInstrument(isAddingNewCard, selectedInstrument) {\n        return !isAddingNewCard && (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_4__.isBankAccountInstrument)(selectedInstrument)\n            ? selectedInstrument\n            : undefined;\n    }\n    renderEditButtonIfAvailable() {\n        const { shouldShowEditButton, buttonId } = this.props;\n        const translatedString = react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_10__[\"default\"], { id: \"remote.select_different_card_action\" });\n        if (shouldShowEditButton) {\n            return (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"p\", null, \n            // eslint-disable-next-line jsx-a11y/anchor-is-valid, jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n            react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"a\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('stepHeader', 'widget-link-amazonpay'), id: buttonId, onClick: (0,_bigcommerce_checkout_dom_utils__WEBPACK_IMPORTED_MODULE_11__[\"default\"])() }, translatedString)));\n        }\n    }\n    renderPaymentDescriptorIfAvailable() {\n        const { shouldShowDescriptor, paymentDescriptor } = this.props;\n        if (shouldShowDescriptor && paymentDescriptor) {\n            return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: \"payment-descriptor\" }, paymentDescriptor);\n        }\n    }\n    initializeMethod() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {\n            const { isPaymentDataRequired, isSignedIn, isSignInRequired, initializeCustomer = lodash__WEBPACK_IMPORTED_MODULE_1__.noop, initializePayment = lodash__WEBPACK_IMPORTED_MODULE_1__.noop, instruments, method, setSubmit, signInCustomer = lodash__WEBPACK_IMPORTED_MODULE_1__.noop, } = this.props;\n            const { selectedInstrumentId = this.getDefaultInstrumentId(), isAddingNewCard } = this.state;\n            let selectedInstrument;\n            if (!isPaymentDataRequired) {\n                setSubmit(method, null);\n                return Promise.resolve();\n            }\n            if (isSignInRequired && !isSignedIn) {\n                setSubmit(method, signInCustomer);\n                return initializeCustomer({\n                    methodId: method.id,\n                });\n            }\n            setSubmit(method, null);\n            if (!isAddingNewCard) {\n                selectedInstrument =\n                    instruments.find((instrument) => instrument.bigpayToken === selectedInstrumentId) ||\n                        instruments[0];\n            }\n            return initializePayment({\n                gatewayId: method.gateway,\n                methodId: method.id,\n            }, selectedInstrument);\n        });\n    }\n    getDefaultInstrumentId() {\n        const { isAddingNewCard } = this.state;\n        if (isAddingNewCard) {\n            return;\n        }\n        const { instruments } = this.props;\n        const defaultInstrument = instruments.find((instrument) => instrument.defaultInstrument) || instruments[0];\n        return defaultInstrument && defaultInstrument.bigpayToken;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HostedWidgetPaymentComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/hosted-widget-integration/src/HostedWidgetPaymentComponent.tsx\n");

/***/ })

}]);